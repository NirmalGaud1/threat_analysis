import streamlit as st
import google.generativeai as genai
from PIL import Image

# Configure Gemini
GENAI_API_KEY = "AIzaSyA-9-lTQTWdNM43YdOXMQwGKDy0SrMwo6c"  # Replace with yours
genai.configure(api_key=GENAI_API_KEY)
gemini_model = genai.GenerativeModel('gemini-1.5-flash')

def analyze_input(query, is_image=False):
    """Analyze input using Gemini's built-in knowledge"""
    try:
        if is_image:
            prompt = """Analyze this image and provide:
            1. Potential identification of person
            2. Notable features
            3. Publicly known information
            4. Associated risks
            5. Relevant fictional links (format as bullet points)"""
            
            response = gemini_model.generate_content([prompt, query])
        else:
            prompt = f"""Analyze this query: {query}
            Provide:
            1. Potential person identification
            2. Background information
            3. Public records summary
            4. Risk assessment
            5. Relevant fictional links (format as bullet points)
            
            Note: Generate hypothetical information for demonstration purposes only"""
            
            response = gemini_model.generate_content(prompt)
            
        return response.text
    except Exception as e:
        return f"Analysis error: {str(e)}"

def main():
    st.set_page_config(page_title="Person Analyzer", layout="wide")
    
    st.title("üîç Person Analysis System")
    st.markdown("Demonstration system using Gemini AI - All data is fictional")
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.subheader("Input")
        input_type = st.radio("Input Type", ["Name", "Image", "URL"])
        
        query = None
        if input_type == "Name":
            query = st.text_input("Enter Name", placeholder="John Doe")
        elif input_type == "Image":
            uploaded_file = st.file_uploader("Upload Image", type=["jpg", "png"])
            if uploaded_file:
                query = Image.open(uploaded_file)
                st.image(query, width=200)
        elif input_type == "URL":
            query = st.text_input("Enter Profile URL")
        
    with col2:
        st.subheader("Analysis")
        
        if st.button("Analyze") and query:
            with st.spinner("Analyzing..."):
                is_image = input_type == "Image"
                results = analyze_input(query, is_image)
                
                st.subheader("Full Report")
                st.markdown(results)
                
                if "fictional links" in results.lower():
                    with st.expander("üìë Generated References"):
                        st.markdown("""
                        - Example Social Media Profile: [#](https://example.com)
                        - News Archive: [#](https://example.com) 
                        - Public Records: [#](https://example.com)
                        """)

    st.markdown("""
    ---
    **Disclaimer:** This is a fictional demonstration. All information is generated by AI.
    No real personal data is used or accessed. Never use for real investigations.
    """)

if __name__ == "__main__":
    main()
